/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthenticatedAddHabitRouteImport } from './routes/_authenticated/add-habit'
import { Route as AuthenticatedHabitIdRouteImport } from './routes/_authenticated/habit.$id'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedAddHabitRoute = AuthenticatedAddHabitRouteImport.update({
  id: '/add-habit',
  path: '/add-habit',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedHabitIdRoute = AuthenticatedHabitIdRouteImport.update({
  id: '/habit/$id',
  path: '/habit/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/add-habit': typeof AuthenticatedAddHabitRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/': typeof AuthenticatedIndexRoute
  '/habit/$id': typeof AuthenticatedHabitIdRoute
}
export interface FileRoutesByTo {
  '/add-habit': typeof AuthenticatedAddHabitRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/': typeof AuthenticatedIndexRoute
  '/habit/$id': typeof AuthenticatedHabitIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/add-habit': typeof AuthenticatedAddHabitRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/habit/$id': typeof AuthenticatedHabitIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/add-habit'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/'
    | '/habit/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/add-habit' | '/auth/sign-in' | '/auth/sign-up' | '/' | '/habit/$id'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/add-habit'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/_authenticated/'
    | '/_authenticated/habit/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/add-habit': {
      id: '/_authenticated/add-habit'
      path: '/add-habit'
      fullPath: '/add-habit'
      preLoaderRoute: typeof AuthenticatedAddHabitRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/habit/$id': {
      id: '/_authenticated/habit/$id'
      path: '/habit/$id'
      fullPath: '/habit/$id'
      preLoaderRoute: typeof AuthenticatedHabitIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedAddHabitRoute: typeof AuthenticatedAddHabitRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedHabitIdRoute: typeof AuthenticatedHabitIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAddHabitRoute: AuthenticatedAddHabitRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedHabitIdRoute: AuthenticatedHabitIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
